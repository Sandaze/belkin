{"version":3,"sources":["components/ViewCard/ViewCard.module.css","common/Pagination/Pagination.module.css","components/Authorization/Authorization.module.css","components/Navbar/Navbar.module.css","common/Preloader/Preloader.module.css","components/PokemonCards/PokemonCards.module.css","api/api.js","components/Authorization/Authorization.jsx","components/Navbar/Navbar.jsx","components/PokemonCards/Card/Card.jsx","common/Preloader/Preloader.jsx","common/Pagination/Pagination.jsx","components/PokemonCards/PokemonCards.jsx","redux/pokemon-cards-reducer.js","components/PokemonCards/PokemonCardsContainer.jsx","components/ViewCard/ViewCard.jsx","App.js","reportWebVitals.js","redux/initial-reducer.js","redux/store.js","InitializationAppContainer.js","index.js"],"names":["module","exports","instance","axios","create","headers","baseURL","authApi","password","symbols","i","charAt","Math","floor","random","length","pokemonApi","page","pageSize","query","get","types","subtypes","then","res","data","ConfirmPassword","props","useState","oneTimePassword","code","setCode","isValidData","setIsValidData","confirmIsClicked","setConfirmIsClicked","history","useHistory","console","log","push","className","css","auth","confirm","authBox","inputBx","onChange","e","currentTarget","value","type","placeholder","errorBx","active","errorBxIcon","errorBxMessage","buttonBx","onClick","Authorization","login","setLogin","pass","setPass","loginIsClicked","setLoginIsClicked","useSelector","state","initialData","loginHandler","passwordHandler","Navbar","navbar","navbarM","children","Card","urlCard","boxItem","src","src_img","alt","boxItemImg","boxItemName","name","boxItemSubName","subname","Preloader","preloader","Pagination","pagesCount","ceil","totalCount","pages","countPortion","numberPortion","setNumberPortion","rightLimitPortion","leftLimitPortion","pagination","paginationButton","prev","filter","p","map","changePage","currentPage","next","PokemonCards","React","memo","isLoading","wrapper","sidebar","sidebarBx","getCardsByType","id","toLowerCase","getCardsBySubtype","subtype","boxCards","cards","card","images","small","artist","SET_CARDS","SET_SELECTED_TYPE","SET_SELECTED_SUBTYPE","TOGGLE_LOADING","SET_TOTAL_CARDS_COUNT","SET_CURRENT_PAGE","init_state","selectedType","selectedSubtype","setToggleLoading","pokemonCardsReducer","action","PokemonCardsContainer","getPokemonCards","setCurrentPage","this","Component","connect","pokemonCards","pokemon_types","subtypes_pokemon","dispatch","a","response","ViewCard","useParams","el","cardBox","large","cardBoxImg","cardBoxDesc","cardBoxName","cardBoxTypes","cardBoxSubtypes","attacks","damage","convertedEnergyCost","hp","App","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SET_TYPES","SET_SUBTYPES","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","store","createStore","applyMiddleware","middleThunk","InitializationAppContainer","getTypesPokemon","getSubtypesPokemon","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.532d0c6c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"ViewCard_card__35kvx\",\"cardBoxImg\":\"ViewCard_cardBoxImg__2pxyW\",\"cardBox\":\"ViewCard_cardBox__3PI9Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__T2Hx-\",\"currentPage\":\"Pagination_currentPage__1czMh\",\"paginationButton\":\"Pagination_paginationButton__2sMx2\",\"prev\":\"Pagination_prev__2Mc8J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"Authorization_auth__39Hdj\",\"inputBx\":\"Authorization_inputBx__2Am5h\",\"buttonBx\":\"Authorization_buttonBx__AjwhD\",\"errorBxIcon\":\"Authorization_errorBxIcon__36fvI\",\"errorBx\":\"Authorization_errorBx__3plge\",\"active\":\"Authorization_active__3wZ8u\",\"errorBxMessage\":\"Authorization_errorBxMessage__1rSEo\",\"confirm\":\"Authorization_confirm__1Ou5D\",\"fadeIn\":\"Authorization_fadeIn__1iPFL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__18ZBo\",\"navbarM\":\"Navbar_navbarM__2bhQA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__2H2cz\",\"fadeIn\":\"Preloader_fadeIn__2L1Zh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PokemonCards_wrapper__1jyBz\",\"sidebar\":\"PokemonCards_sidebar__2q8MJ\",\"sidebarBx\":\"PokemonCards_sidebarBx__3wOa9\",\"boxCards\":\"PokemonCards_boxCards__WFmhB\",\"boxItem\":\"PokemonCards_boxItem__1Wb-F\",\"boxItemImg\":\"PokemonCards_boxItemImg__2iZBm\",\"boxItemName\":\"PokemonCards_boxItemName__3LXzj\",\"boxItemSubName\":\"PokemonCards_boxItemSubName__1i54D\"};","import axios from \"axios\";\r\n\r\nconst baseURL = 'https://api.pokemontcg.io/v2/'\r\nconst instance = axios.create({\r\n    headers: {\r\n        'X-Api-Key': 'd800239c-ade8-4890-85a0-04e021a8e2b1',\r\n    },\r\n    baseURL: baseURL,\r\n});\r\n\r\nexport const authApi = {\r\n    getOneTimePassword: () => {\r\n        let password = \"\";\r\n        let symbols = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n        for (let i = 0; i < 15; i++)\r\n            password += symbols.charAt(Math.floor(Math.random() * symbols.length));\r\n\r\n        return password;\r\n    },\r\n}\r\nexport const pokemonApi = {\r\n    getPortionCards: (page, pageSize, query) => {\r\n        return instance.get(`cards?q=types:${query.types} subtypes:\"${query.subtypes}\"&page=${page}&pageSize=${pageSize}`).then(res => res.data);\r\n    },\r\n    getTypesPokemon: () => {\r\n        return instance.get('types').then(res => res.data);\r\n    },\r\n    getSubtypesPokemon: () => {\r\n        return instance.get('subtypes').then(res => res.data);\r\n    }\r\n}","import css from './Authorization.module.css';\r\nimport React, {useState} from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {authApi} from \"../../api/api\";\r\nimport {useSelector} from \"react-redux\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const ConfirmPassword = (props) => {\r\n    const [oneTimePassword, setOneTimePassword] = useState(authApi.getOneTimePassword());\r\n    const [code, setCode] = useState('');\r\n    const [isValidData, setIsValidData] = useState(false);\r\n    const [confirmIsClicked, setConfirmIsClicked] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    console.log('OTP:' + ' ' + oneTimePassword);\r\n\r\n    const checkOTP = () => {\r\n        setConfirmIsClicked(true);\r\n        if(code === oneTimePassword){\r\n            setIsValidData(true);\r\n        }\r\n    }\r\n\r\n    if(isValidData){\r\n        history.push('/cards');\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <div className={css.auth + ' ' + css.confirm}>\r\n            <h1>Подтверждение</h1>\r\n            <div className={css.authBox}>\r\n                <div className={css.inputBx}>\r\n                    <input onChange={(e) => setCode(e.currentTarget.value)} type=\"text\" value={code}\r\n                           placeholder={'Code from SMS'}/>\r\n                    {confirmIsClicked && <div className={`${css.errorBx} ${!isValidData ? css.active : ''}`}>\r\n                        <div className={css.errorBxIcon}>!</div>\r\n                        <div className={css.errorBxMessage}>Неправильно введен SMS</div>\r\n                    </div>}\r\n                </div>\r\n                <div className={css.buttonBx}>\r\n                    <button onClick={checkOTP}>Confirm</button>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport const Authorization = (props) => {\r\n    const [login, setLogin] = useState('');\r\n    const [pass, setPass] = useState('');\r\n    const [isValidData, setIsValidData] = useState(false);\r\n    const [loginIsClicked, setLoginIsClicked] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    let data = useSelector((state) =>{\r\n        return {login: state.initialData.login, password: state.initialData.password}\r\n    })\r\n\r\n    const checkValidate = (e) => {\r\n        setLoginIsClicked(true);\r\n        if (login !== data.login || pass !== data.password) {\r\n            setIsValidData(false);\r\n        } else {\r\n            setIsValidData(true);\r\n        }\r\n    }\r\n\r\n    const loginHandler = (e) => {\r\n        setLogin(e.currentTarget.value);\r\n    }\r\n    const passwordHandler = (e) => {\r\n        setPass(e.currentTarget.value);\r\n    }\r\n    if (isValidData){\r\n        history.push('/confirm');\r\n        return <></>;\r\n    }\r\n    return (\r\n        <div className={css.auth}>\r\n            <h1>Авторизация</h1>\r\n            <div className={css.authBox}>\r\n                <div className={css.inputBx}>\r\n                    <input onChange={e => loginHandler(e)} value={login} type=\"text\" placeholder={'Login'}/>\r\n                    {loginIsClicked && <div className={`${css.errorBx} ${!isValidData ? css.active : ''}`}>\r\n                        <div className={css.errorBxIcon}>!</div>\r\n                        <div className={css.errorBxMessage}>Неправильно набран логин или пароль</div>\r\n                    </div>}\r\n                </div>\r\n                <div className={css.inputBx}>\r\n                    <input value={pass} onChange={e => passwordHandler(e)} type=\"password\" placeholder={'Password'}/>\r\n                    {loginIsClicked && <div className={`${css.errorBx} ${!isValidData ? css.active : ''}`}>\r\n                        <div className={css.errorBxIcon}>!</div>\r\n                        <div className={css.errorBxMessage}>Неправильно набран логин или пароль</div>\r\n                    </div>}\r\n                </div>\r\n                <div className={css.buttonBx}>\r\n                    <button onClick={checkValidate}>Login</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import css from './Navbar.module.css';\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <div className={`${css.navbar} ${css.navbarM}`}>\r\n            {props.children}\r\n            <button>Logout</button>\r\n        </div>\r\n    );\r\n}\r\nexport default Navbar;","import css from \"../PokemonCards.module.css\";\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div onClick={props.urlCard} className={css.boxItem}><img src={props.src_img} alt=\"\" className={css.boxItemImg}/>\r\n            <h1 className={css.boxItemName}>{props.name}</h1>\r\n            <p className={css.boxItemSubName}>{props.subname}</p>\r\n        </div>\r\n    );\r\n}\r\nexport default Card;","import css from './Preloader.module.css';\r\nconst Preloader = (props) => {\r\n    return <div className={css.preloader}>\r\n        <img src=\"\" alt=\"\"/>\r\n    </div>\r\n}\r\nexport default Preloader;","import css from \"./Pagination.module.css\";\r\nimport React, {useState} from \"react\";\r\n\r\nconst Pagination = (props) => {\r\n    let pagesCount = Math.ceil(props.totalCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++){\r\n        pages.push(i);\r\n    }\r\n    let countPortion = Math.ceil(pagesCount / props.pageSize);\r\n\r\n    let [numberPortion, setNumberPortion] = useState(1);\r\n\r\n    let rightLimitPortion = numberPortion * props.pageSize;\r\n    let leftLimitPortion = numberPortion * props.pageSize - props.pageSize;\r\n    return <div className={css.pagination}>\r\n        <div className={css.paginationButton}>\r\n            {numberPortion > 1 && <button onClick={() => {setNumberPortion(numberPortion - 1)}} className={css.prev}>Prev</button>}\r\n        </div>\r\n        {\r\n            pages.filter(p => p>leftLimitPortion && p <= rightLimitPortion).map(page => {\r\n                return <span onClick={() => props.changePage(page)} className={page === props.currentPage && css.currentPage}>{page}</span>\r\n            })\r\n        }\r\n        <div className={css.paginationButton}>\r\n            {numberPortion < countPortion && <button onClick={() => {setNumberPortion(numberPortion + 1)}} className={css.next}>Next</button>}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Pagination;","import Navbar from \"../Navbar/Navbar\";\r\nimport css from './PokemonCards.module.css';\r\nimport Card from \"./Card/Card\";\r\nimport React, {useState} from 'react';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport Pagination from \"../../common/Pagination/Pagination\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst PokemonCards = React.memo(\r\n    (props) => {\r\n        let history = useHistory();\r\n        const changeType = (e) => {\r\n            props.getCardsByType(e.currentTarget.value);\r\n        }\r\n        const changeSubtype = (e) => {\r\n            props.getCardsBySubtype(e.currentTarget.value);\r\n        }\r\n\r\n        return (\r\n            <>\r\n                {props.isLoading && <Preloader />}\r\n                <Navbar />\r\n                <div className={css.wrapper}>\r\n                    <div className={css.sidebar}>\r\n                        <div className={css.sidebarBx}>\r\n                            <select onChange={changeType} name=\"\" id=\"\">\r\n                                {props.types.map(type => <option value={type.toLowerCase()}>{type}</option>)}\r\n                            </select>\r\n                        </div>\r\n                        <div className={css.sidebarBx}>\r\n                            <select onChange={changeSubtype} name=\"\" id=\"\">\r\n                                {props.subtypes.map(subtype => <option value={subtype.toLowerCase()}>{subtype}</option>)}\r\n                            </select>\r\n                        </div>\r\n                        <Pagination totalCount={props.totalCount} pageSize={props.pageSize} changePage={props.changePage} currentPage={props.currentPage} />\r\n                    </div>\r\n                    <div>\r\n                        <div className={css.boxCards}>\r\n                            {props.cards.map(card => {\r\n                                return <Card key={card.id}\r\n                                             name={card.name}\r\n                                             src_img={card.images.small}\r\n                                             subname={card.artist}\r\n                                             urlCard={() => history.push(`/card/${card.id}`)}\r\n                                />;\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n);\r\nexport default PokemonCards;","import {pokemonApi} from \"../api/api\";\r\n\r\nconst SET_CARDS = 'SET_CARDS';\r\nconst SET_SELECTED_TYPE = 'SET_SELECTED_TYPE';\r\nconst SET_SELECTED_SUBTYPE = 'SET_SELECTED_SUBTYPE';\r\nconst TOGGLE_LOADING = 'TOGGLE_LOADING';\r\nconst SET_TOTAL_CARDS_COUNT = 'SET_TOTAL_CARDS_COUNT';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\n\r\n\r\nlet init_state = {\r\n    selectedType: 'colorless',\r\n    selectedSubtype: 'break',\r\n    page: 1,\r\n    pageSize: 6,\r\n    isLoading: false,\r\n    totalCount: null,\r\n    currentPage: 1,\r\n    cards: [],\r\n};\r\nconst pokemonCardsReducer = (state = init_state, action) => {\r\n    switch (action.type) {\r\n        case SET_CARDS:\r\n            return {\r\n                ...state, cards: [...action.cards],\r\n            };\r\n        case SET_SELECTED_TYPE:\r\n            return {\r\n                ...state, selectedType: action.selectedType,\r\n            };\r\n        case SET_SELECTED_SUBTYPE:\r\n            return {\r\n                ...state, selectedSubtype: action.selectedSubtype,\r\n            };\r\n        case TOGGLE_LOADING:\r\n            return {\r\n                ...state, isLoading: !state.isLoading,\r\n            };\r\n        case SET_TOTAL_CARDS_COUNT:\r\n            return {\r\n                ...state, totalCount: action.totalCount,\r\n            };\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.currentPage,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setCards = (cards) => {\r\n    return {type: SET_CARDS, cards}\r\n}\r\nexport const setSelectedType = (selectedType) => {\r\n    return {type: SET_SELECTED_TYPE, selectedType}\r\n}\r\nexport const setSelectedSubtype = (selectedSubtype) => {\r\n    return {type: SET_SELECTED_SUBTYPE, selectedSubtype}\r\n}\r\nexport const setToggleLoading = () => {\r\n    return {type: TOGGLE_LOADING}\r\n}\r\nexport const setTotalCardsCount = (totalCount) => {\r\n    return {type: SET_TOTAL_CARDS_COUNT, totalCount}\r\n}\r\nexport const setCurrentPage = (currentPage) => {\r\n    return {type: SET_CURRENT_PAGE, currentPage}\r\n}\r\n\r\n\r\nexport const getPokemonCards = (page, pageSize, query) => {\r\n    return async (dispatch) => {\r\n        dispatch(setToggleLoading());\r\n        let response = await pokemonApi.getPortionCards(page, pageSize, query);\r\n        console.log(response);\r\n        dispatch(setCards(response.data));\r\n        dispatch(setSelectedType(query.types));\r\n        dispatch(setSelectedSubtype(query.subtypes));\r\n        dispatch(setTotalCardsCount(response.totalCount));\r\n        dispatch(setToggleLoading());\r\n    }\r\n}\r\n\r\nexport default pokemonCardsReducer;","import React, {useState} from 'react';\r\nimport PokemonCards from \"./PokemonCards\";\r\nimport {connect} from \"react-redux\";\r\nimport {getPokemonCards, setCurrentPage} from \"../../redux/pokemon-cards-reducer\";\r\n\r\nclass PokemonCardsContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getPokemonCards(this.props.page, this.props.pageSize, {types: this.props.selectedType, subtypes: this.props.selectedSubtype});\r\n    }\r\n\r\n    getCardsByType = (value) => {\r\n        this.props.getPokemonCards(this.props.page, this.props.pageSize, {types: value, subtypes: this.props.selectedSubtype});\r\n    }\r\n    getCardsBySubtype = (value) => {\r\n        this.props.getPokemonCards(this.props.page, this.props.pageSize, {types: this.props.selectedType, subtypes: value});\r\n    }\r\n\r\n    changePage = (page) => {\r\n        this.props.setCurrentPage(page);\r\n        this.props.getPokemonCards(page, this.props.pageSize, {types: this.props.selectedType, subtypes: this.props.selectedSubtype});\r\n    }\r\n\r\n    render() {\r\n        return <PokemonCards {...this.props} getCardsByType={this.getCardsByType} getCardsBySubtype={this.getCardsBySubtype} changePage={this.changePage} />\r\n    }\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        page: state.pokemonCards.page,\r\n        pageSize: state.pokemonCards.pageSize,\r\n        totalCount: state.pokemonCards.totalCount,\r\n        currentPage: state.pokemonCards.currentPage,\r\n        cards: state.pokemonCards.cards,\r\n        selectedType: state.pokemonCards.selectedType,\r\n        selectedSubtype: state.pokemonCards.selectedSubtype,\r\n        isLoading: state.pokemonCards.isLoading,\r\n        types: state.initialData.pokemon_types,\r\n        subtypes: state.initialData.subtypes_pokemon,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, {getPokemonCards, setCurrentPage})(PokemonCardsContainer);","import {useHistory, useParams} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport css from './ViewCard.module.css';\r\nimport React from \"react\";\r\n\r\nconst ViewCard = (props) => {\r\n    const {id} = useParams();\r\n    const card = useSelector((state) => state.pokemonCards.cards.filter(el => el.id === id))[0];\r\n    let history = useHistory();\r\n    return <>\r\n        <Navbar>\r\n            <button onClick={() => {history.push('/cards')}}>Back</button>\r\n        </Navbar>\r\n        <div className={css.card}>\r\n            <div className={css.cardBox}>\r\n                <img src={card.images.large} alt=\"\" className={css.cardBoxImg}/>\r\n                <p className={css.cardBoxDesc}>{}</p>\r\n            </div>\r\n            <div className={css.cardBox}>\r\n                <p className={css.cardBoxName}>{card.name}</p>\r\n                <p className={css.cardBoxTypes}><span>type:</span>{card.types.map(el => el)}</p>\r\n                <p className={css.cardBoxSubtypes}><span>subtype:</span>{card.subtypes.map(el => el)}</p>\r\n                <hr/>\r\n                <p><span>damage:</span>{card.attacks[0].damage}</p>\r\n                <p><span>cost:</span>{card.attacks[0].convertedEnergyCost}</p>\r\n                <p><span>hp:</span>{card.hp}</p>\r\n            </div>\r\n        </div>\r\n    </>;\r\n}\r\n\r\nexport default ViewCard;","import './App.css';\nimport {Authorization, ConfirmPassword} from \"./components/Authorization/Authorization\";\nimport React from \"react\";\nimport {Route} from \"react-router-dom\";\nimport PokemonCardsContainer from \"./components/PokemonCards/PokemonCardsContainer\";\nimport ViewCard from \"./components/ViewCard/ViewCard\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Route exact={true} path={'/'} render={() => <Authorization />} />\n        <Route exact={true} path={'/confirm'} render={() => <ConfirmPassword /> } />\n        <Route exact={true} path={'/cards'} render={() => <PokemonCardsContainer /> } />\n        <Route exact={true} path={'/card/:id'} render={() => <ViewCard /> } />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {pokemonApi} from \"../api/api\";\r\n\r\nconst SET_TYPES = 'SET_TYPES';\r\nconst SET_SUBTYPES = 'SET_SUBTYPES';\r\n\r\n\r\nlet init_state = {\r\n    pokemon_types: [],\r\n    subtypes_pokemon: [],\r\n    login: '1',\r\n    password: '1'\r\n};\r\n\r\nexport const initialReducer = (state = init_state, action) => {\r\n    switch (action.type) {\r\n        case SET_TYPES:\r\n            console.log(action.pokemon_types);\r\n            return {\r\n                ...state, pokemon_types: [...action.pokemon_types]\r\n            }\r\n        case SET_SUBTYPES:\r\n            return {\r\n                ...state, subtypes_pokemon: [...action.subtypes_pokemon]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const setTypes = (pokemon_types) => {\r\n    return {type: SET_TYPES, pokemon_types}\r\n}\r\nexport const setSubtypes = (subtypes_pokemon) => {\r\n    return {type: SET_SUBTYPES, subtypes_pokemon}\r\n}\r\n\r\nexport const getTypesPokemon = () => {\r\n    return async (dispatch) => {\r\n        let response = await pokemonApi.getTypesPokemon();\r\n        dispatch(setTypes(response.data));\r\n    }\r\n}\r\nexport const getSubtypesPokemon = () => {\r\n    return async (dispatch) => {\r\n        let response = await pokemonApi.getSubtypesPokemon();\r\n        dispatch(setSubtypes(response.data));\r\n    }\r\n}\r\n","import pokemonCardsReducer from \"./pokemon-cards-reducer\";\r\nimport {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport middleThunk from 'redux-thunk';\r\nimport {initialReducer} from \"./initial-reducer\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nlet reducers = combineReducers({\r\n    pokemonCards : pokemonCardsReducer,\r\n    initialData: initialReducer,\r\n});\r\n\r\nexport const store = createStore(reducers, composeEnhancers(applyMiddleware(middleThunk)));\r\n\r\nwindow.store = store;","import './App.css';\nimport React from \"react\";\nimport App from \"./App\";\nimport {connect} from \"react-redux\";\nimport {getSubtypesPokemon, getTypesPokemon} from \"./redux/initial-reducer\";\n\nclass InitializationAppContainer extends React.Component {\n    componentDidMount() {\n        this.props.getTypesPokemon();\n        this.props.getSubtypesPokemon();\n    }\n\n    render() {\n        return <App />\n    }\n}\nexport default connect(null, {getTypesPokemon, getSubtypesPokemon})(InitializationAppContainer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport  {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\nimport InitializationAppContainer from \"./InitializationAppContainer\";\n\nReactDOM.render(\n  // <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter basename={'/belkin'}>\n        <InitializationAppContainer />\n      </HashRouter>\n    </Provider>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}