{"version":3,"sources":["components/Authorization/Authorization.module.css","components/Navbar/Navbar.module.css","common/Preloader/Preloader.module.css","components/PokemonCards/PokemonCards.module.css","api/api.js","components/Authorization/Authorization.jsx","components/Navbar/Navbar.jsx","components/PokemonCards/Card/Card.jsx","common/Preloader/Preloader.jsx","components/PokemonCards/PokemonCards.jsx","redux/pokemon-cards-reducer.js","components/PokemonCards/PokemonCardsContainer.jsx","App.js","reportWebVitals.js","redux/initial-reducer.js","redux/store.js","InitializationAppContainer.js","index.js"],"names":["module","exports","instance","axios","create","headers","baseURL","authApi","password","symbols","i","charAt","Math","floor","random","length","pokemonApi","page","pageSize","query","get","types","subtypes","then","res","data","ConfirmPassword","props","useState","oneTimePassword","code","setCode","isValidData","setIsValidData","confirmIsClicked","setConfirmIsClicked","console","log","to","className","css","auth","confirm","authBox","inputBx","onChange","e","currentTarget","value","type","placeholder","errorBx","active","errorBxIcon","errorBxMessage","buttonBx","onClick","Authorization","login","setLogin","pass","setPass","loginIsClicked","setLoginIsClicked","loginHandler","passwordHandler","Navbar","navbar","navbarM","Card","boxItem","src","src_img","alt","boxItemImg","boxItemName","name","boxItemSubName","subname","Preloader","preloader","PokemonCards","pagesCount","ceil","totalCount","pages","push","countPortion","numberPortion","setNumberPortion","rightLimitPortion","leftLimitPortion","isLoading","wrapper","sidebar","sidebarBx","getCardsByType","id","map","toLowerCase","getCardsBySubtype","subtype","pagination","filter","p","currentPage","boxCards","cards","card","images","small","artist","SET_CARDS","SET_SELECTED_TYPE","SET_SELECTED_SUBTYPE","TOGGLE_LOADING","SET_TOTAL_CARDS_COUNT","init_state","selectedType","selectedSubtype","setToggleLoading","pokemonCardsReducer","state","action","PokemonCardsContainer","this","getPokemonCards","React","Component","connect","pokemonCards","initialData","pokemon_types","subtypes_pokemon","dispatch","a","response","App","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SET_TYPES","SET_SUBTYPES","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","store","createStore","applyMiddleware","middleThunk","InitializationAppContainer","getTypesPokemon","getSubtypesPokemon","ReactDOM","basename","document","getElementById"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,KAAO,4BAA4B,QAAU,+BAA+B,SAAW,gCAAgC,YAAc,mCAAmC,QAAU,+BAA+B,OAAS,8BAA8B,eAAiB,sCAAsC,QAAU,+BAA+B,OAAS,gC,mBCAnXD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,0B,wCCA5DD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,OAAS,4B,uCCApED,EAAOC,QAAU,CAAC,QAAU,8BAA8B,QAAU,8BAA8B,UAAY,gCAAgC,SAAW,+BAA+B,WAAa,iCAAiC,YAAc,kCAAkC,eAAiB,uC,gICEjSC,E,OAAWC,EAAMC,OAAO,CAC1BC,QAAS,CACL,YAAa,wCAEjBC,QALY,kCAQHC,EACW,WAIhB,IAHA,IAAIC,EAAW,GACXC,EAAU,iEAELC,EAAI,EAAGA,EAAI,GAAIA,IACpBF,GAAYC,EAAQE,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,EAAQM,SAElE,OAAOP,GAGFQ,EACQ,SAACC,EAAMC,EAAUC,GAC9B,OAAOjB,EAASkB,IAAT,wBAA8BD,EAAME,MAApC,sBAAuDF,EAAMG,SAA7D,kBAA+EL,EAA/E,qBAAgGC,IAAYK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAF9HT,EAIQ,WACb,OAAOd,EAASkB,IAAI,SAASG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SALxCT,EAOW,WAChB,OAAOd,EAASkB,IAAI,YAAYG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,S,OCxB3CC,EAAkB,SAACC,GAC5B,MAA8CC,mBAASrB,KAAvD,mBAAOsB,EAAP,KACA,GADA,KACwBD,mBAAS,KAAjC,mBAAOE,EAAP,KAAaC,EAAb,KACA,EAAsCH,oBAAS,GAA/C,mBAAOI,EAAP,KAAoBC,EAApB,KACA,EAAgDL,oBAAS,GAAzD,mBAAOM,EAAP,KAAyBC,EAAzB,KAEAC,QAAQC,IAAI,QAAeR,GAS3B,OAAGG,EAAoB,cAAC,IAAD,CAAUM,GAAI,WAGjC,sBAAKC,UAAWC,IAAIC,KAAO,IAAMD,IAAIE,QAArC,UACI,gHACA,sBAAKH,UAAWC,IAAIG,QAApB,UACI,sBAAKJ,UAAWC,IAAII,QAApB,UACI,uBAAOC,SAAU,SAACC,GAAD,OAAOf,EAAQe,EAAEC,cAAcC,QAAQC,KAAK,OAAOD,MAAOlB,EACpEoB,YAAa,kBACnBhB,GAAoB,sBAAKK,UAAS,UAAKC,IAAIW,QAAT,YAAqBnB,EAA2B,GAAbQ,IAAIY,QAArD,UACjB,qBAAKb,UAAWC,IAAIa,YAApB,eACA,qBAAKd,UAAWC,IAAIc,eAApB,+HAGR,qBAAKf,UAAWC,IAAIe,SAApB,SACI,wBAAQC,QAtBP,WACbrB,GAAoB,GACjBL,IAASD,GACRI,GAAe,IAmBP,8BAMPwB,EAAgB,SAAC9B,GAC1B,MAA0BC,mBAAS,IAAnC,mBAAO8B,EAAP,KAAcC,EAAd,KACA,EAAwB/B,mBAAS,IAAjC,mBAAOgC,EAAP,KAAaC,EAAb,KACA,EAAsCjC,oBAAS,GAA/C,mBAAOI,EAAP,KAAoBC,EAApB,KACA,EAA4CL,oBAAS,GAArD,mBAAOkC,EAAP,KAAuBC,EAAvB,KAEItC,EACS,IADTA,EAEY,IAmBhB,OAAIO,EAAoB,cAAC,IAAD,CAAUM,GAAI,aAElC,sBAAKC,UAAWC,IAAIC,KAApB,UACI,oGACA,sBAAKF,UAAWC,IAAIG,QAApB,UACI,sBAAKJ,UAAWC,IAAII,QAApB,UACI,uBAAOC,SAAU,SAAAC,GAAC,OAZb,SAACA,GAClBa,EAASb,EAAEC,cAAcC,OAWSgB,CAAalB,IAAIE,MAAOU,EAAOT,KAAK,OAAOC,YAAa,UAC7EY,GAAkB,sBAAKvB,UAAS,UAAKC,IAAIW,QAAT,YAAqBnB,EAA2B,GAAbQ,IAAIY,QAArD,UACf,qBAAKb,UAAWC,IAAIa,YAApB,eACA,qBAAKd,UAAWC,IAAIc,eAApB,kNAGR,sBAAKf,UAAWC,IAAII,QAApB,UACI,uBAAOI,MAAOY,EAAMf,SAAU,SAAAC,GAAC,OAhBvB,SAACA,GACrBe,EAAQf,EAAEC,cAAcC,OAeuBiB,CAAgBnB,IAAIG,KAAK,WAAWC,YAAa,aACnFY,GAAkB,sBAAKvB,UAAS,UAAKC,IAAIW,QAAT,YAAqBnB,EAA2B,GAAbQ,IAAIY,QAArD,UACf,qBAAKb,UAAWC,IAAIa,YAApB,eACA,qBAAKd,UAAWC,IAAIc,eAApB,kNAGR,qBAAKf,UAAWC,IAAIe,SAApB,SACI,wBAAQC,QApCF,SAACV,GACnBiB,GAAkB,GACdL,IAAUjC,GAAcmC,IAASnC,GACjCQ,GAAe,GACfG,QAAQC,IAAI,IAEZJ,GAAe,IA8BP,4B,wDC/ELiC,EAPA,SAACvC,GACZ,OACI,qBAAKY,UAAS,UAAKC,IAAI2B,OAAT,YAAmB3B,IAAI4B,SAArC,SACI,+C,gBCKGC,EARF,SAAC1C,GACV,OACI,sBAAKY,UAAWC,IAAI8B,QAApB,UAA6B,qBAAKC,IAAK5C,EAAM6C,QAASC,IAAI,GAAGlC,UAAWC,IAAIkC,aACxE,oBAAInC,UAAWC,IAAImC,YAAnB,SAAiChD,EAAMiD,OACvC,mBAAGrC,UAAWC,IAAIqC,eAAlB,SAAmClD,EAAMmD,c,iBCAtCC,EALG,SAACpD,GACf,OAAO,qBAAKY,UAAWC,IAAIwC,UAApB,SACH,qBAAKT,IAAI,GAAGE,IAAI,QCkETQ,EA/DM,SAACtD,GAUlB,IARA,IAMIuD,EAAatE,KAAKuE,KAAKxD,EAAMyD,WAAazD,EAAMT,UAChDmE,EAAQ,GACH3E,EAAI,EAAGA,GAAKwE,EAAYxE,IAC7B2E,EAAMC,KAAK5E,GAEf,IAAI6E,EAAe3E,KAAKuE,KAAKD,EAAavD,EAAMT,UAEhD,EAAwCU,mBAAS,GAAjD,mBAAK4D,EAAL,KAAoBC,EAApB,KAEIC,EAAoBF,EAAgB7D,EAAMT,SAC1CyE,EAAmBH,EAAgB7D,EAAMT,SAAWS,EAAMT,SAE9D,OACI,qCACKS,EAAMiE,WAAa,cAAC,EAAD,IACpB,cAAC,EAAD,IACA,sBAAKrD,UAAWC,IAAIqD,QAApB,UACI,sBAAKtD,UAAWC,IAAIsD,QAApB,UACI,qBAAKvD,UAAWC,IAAIuD,UAApB,SACI,wBAAQlD,SAzBT,SAACC,GAChBnB,EAAMqE,eAAelD,EAAEC,cAAcC,QAwBS4B,KAAK,GAAGqB,GAAG,GAAzC,SACKtE,EAAMN,MAAM6E,KAAI,SAAAjD,GAAI,OAAI,wBAAQD,MAAOC,EAAKkD,cAApB,SAAoClD,WAGrE,qBAAKV,UAAWC,IAAIuD,UAApB,SACI,wBAAQlD,SA3BN,SAACC,GACnBnB,EAAMyE,kBAAkBtD,EAAEC,cAAcC,QA0BS4B,KAAK,GAAGqB,GAAG,GAA5C,SACKtE,EAAML,SAAS4E,KAAI,SAAAG,GAAO,OAAI,wBAAQrD,MAAOqD,EAAQF,cAAvB,SAAuCE,WAG9E,sBAAK9D,UAAWC,IAAI8D,WAApB,UACI,qBAAK/D,UAAU,mBAAf,SACKiD,EAAgB,GAAK,wBAAQhC,QAAS,WAAOiC,EAAiBD,EAAgB,IAAzD,oBAGtBH,EAAMkB,QAAO,SAAAC,GAAC,OAAIA,EAAEb,GAAoBa,GAAKd,KAAmBQ,KAAI,SAAAjF,GAChE,OAAO,sBAAMsB,UAAWtB,IAASU,EAAM8E,aAAejE,IAAIiE,YAAnD,SAAiExF,OAGhF,qBAAKsB,UAAU,mBAAf,SACKiD,EAAgBD,GAAgB,wBAAQ/B,QAAS,WAAOiC,EAAiBD,EAAgB,IAAzD,0BAI7C,qBAAKjD,UAAWC,IAAIkE,SAApB,SACK/E,EAAMgF,MAAMT,KAAI,SAAAU,GACb,OAAO,cAAC,EAAD,CACMhC,KAAMgC,EAAKhC,KACXJ,QAASoC,EAAKC,OAAOC,MACrBhC,QAAS8B,EAAKG,QAHTH,EAAKX,gB,yCCxDzCe,EAAY,YACZC,EAAoB,oBACpBC,EAAuB,uBACvBC,EAAiB,iBACjBC,EAAwB,wBAG1BC,EAAa,CACbC,aAAc,YACdC,gBAAiB,QACjBtG,KAAM,EACNC,SAAU,EACV0E,WAAW,EACXR,WAAY,KACZqB,YAAa,EACbE,MAAO,IAsCEa,EAAmB,WAC5B,MAAO,CAACvE,KAAMkE,IAoBHM,EAzDa,WAAiC,IAAhCC,EAA+B,uDAAvBL,EAAYM,EAAW,uCACxD,OAAQA,EAAO1E,MACX,KAAK+D,EACD,OAAO,2BACAU,GADP,IACcf,MAAM,YAAKgB,EAAOhB,SAEpC,KAAKM,EACD,OAAO,2BACAS,GADP,IACcJ,aAAcK,EAAOL,eAEvC,KAAKJ,EACD,OAAO,2BACAQ,GADP,IACcH,gBAAiBI,EAAOJ,kBAE1C,KAAKJ,EACD,OAAO,2BACAO,GADP,IACc9B,WAAY8B,EAAM9B,YAEpC,KAAKwB,EACD,OAAO,2BACAM,GADP,IACctC,WAAYuC,EAAOvC,aAErC,QACI,OAAOsC,ICrCbE,E,uKACF,WACIC,KAAKlG,MAAMmG,gBAAgBD,KAAKlG,MAAMV,KAAM4G,KAAKlG,MAAMT,SAAU,CAACG,MAAOwG,KAAKlG,MAAM2F,aAAchG,SAAUuG,KAAKlG,MAAM4F,oB,4BAE3H,SAAevE,GACX6E,KAAKlG,MAAMmG,gBAAgBD,KAAKlG,MAAMV,KAAM4G,KAAKlG,MAAMT,SAAU,CAACG,MAAO2B,EAAO1B,SAAUuG,KAAKlG,MAAM4F,oB,+BAEzG,SAAkBvE,GACd6E,KAAKlG,MAAMmG,gBAAgBD,KAAKlG,MAAMV,KAAM4G,KAAKlG,MAAMT,SAAU,CAACG,MAAOwG,KAAKlG,MAAM2F,aAAchG,SAAU0B,M,oBAGhH,WACI,OAAO,cAAC,EAAD,2BAAkB6E,KAAKlG,OAAvB,IAA8BqE,eAAgB6B,KAAK7B,eAAgBI,kBAAmByB,KAAKzB,yB,GAZtE2B,IAAMC,WA8B3BC,eAfO,SAACP,GACnB,MAAO,CACHzG,KAAMyG,EAAMQ,aAAajH,KACzBC,SAAUwG,EAAMQ,aAAahH,SAC7BkE,WAAYsC,EAAMQ,aAAa9C,WAC/BqB,YAAaiB,EAAMQ,aAAazB,YAChCE,MAAOe,EAAMQ,aAAavB,MAC1BW,aAAcI,EAAMQ,aAAaZ,aACjCC,gBAAiBG,EAAMQ,aAAaX,gBACpC3B,UAAW8B,EAAMQ,aAAatC,UAC9BvE,MAAOqG,EAAMS,YAAYC,cACzB9G,SAAUoG,EAAMS,YAAYE,oBAII,CAACP,gBD4BV,SAAC7G,EAAMC,EAAUC,GAC5C,8CAAO,WAAOmH,GAAP,eAAAC,EAAA,6DACHD,EAASd,KADN,SAEkBxG,EAA2BC,EAAMC,EAAUC,GAF7D,OAECqH,EAFD,OAGHpG,QAAQC,IAAImG,GACZF,GAtBiB3B,EAsBC6B,EAAS/G,KArBxB,CAACwB,KAAM+D,EAAWL,WAsBrB2B,GApBwBhB,EAoBCnG,EAAME,MAnB5B,CAAC4B,KAAMgE,EAAmBK,kBAoB7BgB,GAlB2Bf,EAkBCpG,EAAMG,SAjB/B,CAAC2B,KAAMiE,EAAsBK,qBAkBhCe,GAb2BlD,EAaCoD,EAASpD,WAZlC,CAACnC,KAAMmE,EAAuBhC,gBAajCkD,EAASd,KARN,kCANuB,IAACpC,EANAmC,EAHHD,EAHPX,IAkBd,OAAP,wDC7BWsB,CAA4CL,GCnB5Ca,MAVf,WACE,OACE,sBAAKlG,UAAU,MAAf,UACI,cAAC,IAAD,CAAOmG,OAAO,EAAMC,KAAM,IAAKC,OAAQ,kBAAM,cAAC,EAAD,OAC7C,cAAC,IAAD,CAAOF,OAAO,EAAMC,KAAM,WAAYC,OAAQ,kBAAM,cAAC,EAAD,OACpD,cAAC,IAAD,CAAOF,OAAO,EAAMC,KAAM,SAAUC,OAAQ,kBAAM,cAAC,EAAD,WCC3CC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxH,MAAK,YAAkD,IAA/CyH,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,yBCLRO,GAAY,YACZC,GAAe,eAGjBjC,GAAa,CACbe,cAAe,GACfC,iBAAkB,ICHhBkB,GAAmBC,OAAOC,sCAAwCC,IAEpEC,GAAWC,YAAgB,CAC3B1B,aAAeT,EACfU,YDE0B,WAAiC,IAAhCT,EAA+B,uDAAvBL,GAAYM,EAAW,uCAC1D,OAAQA,EAAO1E,MACX,KAAKoG,GAED,OADAjH,QAAQC,IAAIsF,EAAOS,eACZ,2BACAV,GADP,IACcU,cAAc,YAAKT,EAAOS,iBAE5C,KAAKkB,GACD,OAAO,2BACA5B,GADP,IACcW,iBAAiB,YAAKV,EAAOU,oBAE/C,QACI,OAAOX,MCXNmC,GAAQC,YAAYH,GAAUJ,GAAiBQ,YAAgBC,QAE5ER,OAAOK,MAAQA,G,ICRTI,G,uKACF,WACIpC,KAAKlG,MAAMuI,kBACXrC,KAAKlG,MAAMwI,uB,oBAGf,WACI,OAAO,cAAC,EAAD,Q,GAP0BpC,IAAMC,WAUhCC,eAAQ,KAAM,CAACiC,gBFiBC,WAC3B,8CAAO,WAAO5B,GAAP,eAAAC,EAAA,sEACkBvH,IADlB,OACCwH,EADD,OAEHF,GAViBF,EAUCI,EAAS/G,KATxB,CAACwB,KAAMoG,GAAWjB,mBAOlB,iCARa,IAACA,IAQd,OAAP,uDElB2C+B,mBFuBb,WAC9B,8CAAO,WAAO7B,GAAP,eAAAC,EAAA,sEACkBvH,IADlB,OACCwH,EADD,OAEHF,GAboBD,EAaCG,EAAS/G,KAZ3B,CAACwB,KAAMqG,GAAcjB,sBAUrB,iCAXgB,IAACA,IAWjB,OAAP,wDExBWJ,CAAqDgC,ICNpEG,IAASxB,OAEL,cAAC,IAAD,CAAUiB,MAAOA,GAAjB,SACE,cAAC,IAAD,CAAYQ,SAAU,UAAtB,SACE,cAAC,GAAD,QAINC,SAASC,eAAe,SAM1B1B,M","file":"static/js/main.05b5ed40.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"Authorization_auth__39Hdj\",\"inputBx\":\"Authorization_inputBx__2Am5h\",\"buttonBx\":\"Authorization_buttonBx__AjwhD\",\"errorBxIcon\":\"Authorization_errorBxIcon__36fvI\",\"errorBx\":\"Authorization_errorBx__3plge\",\"active\":\"Authorization_active__3wZ8u\",\"errorBxMessage\":\"Authorization_errorBxMessage__1rSEo\",\"confirm\":\"Authorization_confirm__1Ou5D\",\"fadeIn\":\"Authorization_fadeIn__1iPFL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__18ZBo\",\"navbarM\":\"Navbar_navbarM__2bhQA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__2H2cz\",\"fadeIn\":\"Preloader_fadeIn__2L1Zh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PokemonCards_wrapper__1jyBz\",\"sidebar\":\"PokemonCards_sidebar__2q8MJ\",\"sidebarBx\":\"PokemonCards_sidebarBx__3wOa9\",\"boxCards\":\"PokemonCards_boxCards__WFmhB\",\"boxItemImg\":\"PokemonCards_boxItemImg__2iZBm\",\"boxItemName\":\"PokemonCards_boxItemName__3LXzj\",\"boxItemSubName\":\"PokemonCards_boxItemSubName__1i54D\"};","import axios from \"axios\";\r\n\r\nconst baseURL = 'https://api.pokemontcg.io/v2/'\r\nconst instance = axios.create({\r\n    headers: {\r\n        'X-Api-Key': 'd800239c-ade8-4890-85a0-04e021a8e2b1',\r\n    },\r\n    baseURL: baseURL,\r\n});\r\n\r\nexport const authApi = {\r\n    getOneTimePassword: () => {\r\n        let password = \"\";\r\n        let symbols = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n        for (let i = 0; i < 15; i++)\r\n            password += symbols.charAt(Math.floor(Math.random() * symbols.length));\r\n\r\n        return password;\r\n    },\r\n}\r\nexport const pokemonApi = {\r\n    getPortionCards: (page, pageSize, query) => {\r\n        return instance.get(`cards?q=types:${query.types} subtypes:\"${query.subtypes}\"&page=${page}&pageSize=${pageSize}`).then(res => res.data);\r\n    },\r\n    getTypesPokemon: () => {\r\n        return instance.get('types').then(res => res.data);\r\n    },\r\n    getSubtypesPokemon: () => {\r\n        return instance.get('subtypes').then(res => res.data);\r\n    }\r\n}","import css from './Authorization.module.css';\r\nimport React, {useState, useEffect} from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {authApi} from \"../../api/api\";\r\n\r\nexport const ConfirmPassword = (props) => {\r\n    const [oneTimePassword, setOneTimePassword] = useState(authApi.getOneTimePassword());\r\n    const [code, setCode] = useState('');\r\n    const [isValidData, setIsValidData] = useState(false);\r\n    const [confirmIsClicked, setConfirmIsClicked] = useState(false);\r\n\r\n    console.log('OTP:' + ' ' + oneTimePassword);\r\n\r\n    const checkOTP = () => {\r\n        setConfirmIsClicked(true);\r\n        if(code === oneTimePassword){\r\n            setIsValidData(true);\r\n        }\r\n    }\r\n\r\n    if(isValidData) return <Redirect to={'/cards'} />\r\n\r\n    return (\r\n        <div className={css.auth + ' ' + css.confirm}>\r\n            <h1>Подтверждение</h1>\r\n            <div className={css.authBox}>\r\n                <div className={css.inputBx}>\r\n                    <input onChange={(e) => setCode(e.currentTarget.value)} type=\"text\" value={code}\r\n                           placeholder={'Code from SMS'}/>\r\n                    {confirmIsClicked && <div className={`${css.errorBx} ${!isValidData ? css.active : ''}`}>\r\n                        <div className={css.errorBxIcon}>!</div>\r\n                        <div className={css.errorBxMessage}>Неправильно введен SMS</div>\r\n                    </div>}\r\n                </div>\r\n                <div className={css.buttonBx}>\r\n                    <button onClick={checkOTP}>Confirm</button>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport const Authorization = (props) => {\r\n    const [login, setLogin] = useState('');\r\n    const [pass, setPass] = useState('');\r\n    const [isValidData, setIsValidData] = useState(false);\r\n    const [loginIsClicked, setLoginIsClicked] = useState(false);\r\n\r\n    let data = {\r\n        'login': '1',\r\n        'password': '1',\r\n    }\r\n\r\n    const checkValidate = (e) => {\r\n        setLoginIsClicked(true);\r\n        if (login !== data.login || pass !== data.password) {\r\n            setIsValidData(false);\r\n            console.log(1);\r\n        } else {\r\n            setIsValidData(true);\r\n        }\r\n    }\r\n\r\n    const loginHandler = (e) => {\r\n        setLogin(e.currentTarget.value);\r\n    }\r\n    const passwordHandler = (e) => {\r\n        setPass(e.currentTarget.value);\r\n    }\r\n    if (isValidData) return <Redirect to={'/confirm'}/>\r\n    return (\r\n        <div className={css.auth}>\r\n            <h1>Авторизация</h1>\r\n            <div className={css.authBox}>\r\n                <div className={css.inputBx}>\r\n                    <input onChange={e => loginHandler(e)} value={login} type=\"text\" placeholder={'Login'}/>\r\n                    {loginIsClicked && <div className={`${css.errorBx} ${!isValidData ? css.active : ''}`}>\r\n                        <div className={css.errorBxIcon}>!</div>\r\n                        <div className={css.errorBxMessage}>Неправильно набран логин или пароль</div>\r\n                    </div>}\r\n                </div>\r\n                <div className={css.inputBx}>\r\n                    <input value={pass} onChange={e => passwordHandler(e)} type=\"password\" placeholder={'Password'}/>\r\n                    {loginIsClicked && <div className={`${css.errorBx} ${!isValidData ? css.active : ''}`}>\r\n                        <div className={css.errorBxIcon}>!</div>\r\n                        <div className={css.errorBxMessage}>Неправильно набран логин или пароль</div>\r\n                    </div>}\r\n                </div>\r\n                <div className={css.buttonBx}>\r\n                    <button onClick={checkValidate}>Login</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import css from './Navbar.module.css';\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <div className={`${css.navbar} ${css.navbarM}`}>\r\n            <button>Logout</button>\r\n        </div>\r\n    );\r\n}\r\nexport default Navbar;","import css from \"../PokemonCards.module.css\";\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className={css.boxItem}><img src={props.src_img} alt=\"\" className={css.boxItemImg}/>\r\n            <h1 className={css.boxItemName}>{props.name}</h1>\r\n            <p className={css.boxItemSubName}>{props.subname}</p>\r\n        </div>\r\n    );\r\n}\r\nexport default Card;","import css from './Preloader.module.css';\r\nconst Preloader = (props) => {\r\n    return <div className={css.preloader}>\r\n        <img src=\"\" alt=\"\"/>\r\n    </div>\r\n}\r\nexport default Preloader;","import Navbar from \"../Navbar/Navbar\";\r\nimport css from './PokemonCards.module.css';\r\nimport Card from \"./Card/Card\";\r\nimport React, {useState} from 'react';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\n\r\nconst PokemonCards = (props) => {\r\n\r\n    const changeType = (e) => {\r\n        props.getCardsByType(e.currentTarget.value);\r\n    }\r\n    const changeSubtype = (e) => {\r\n        props.getCardsBySubtype(e.currentTarget.value);\r\n    }\r\n    let pagesCount = Math.ceil(props.totalCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++){\r\n        pages.push(i);\r\n    }\r\n    let countPortion = Math.ceil(pagesCount / props.pageSize);\r\n\r\n    let [numberPortion, setNumberPortion] = useState(1);\r\n\r\n    let rightLimitPortion = numberPortion * props.pageSize;\r\n    let leftLimitPortion = numberPortion * props.pageSize - props.pageSize;\r\n\r\n    return (\r\n        <>\r\n            {props.isLoading && <Preloader />}\r\n            <Navbar />\r\n            <div className={css.wrapper}>\r\n                <div className={css.sidebar}>\r\n                    <div className={css.sidebarBx}>\r\n                        <select onChange={changeType} name=\"\" id=\"\">\r\n                            {props.types.map(type => <option value={type.toLowerCase()}>{type}</option>)}\r\n                        </select>\r\n                    </div>\r\n                    <div className={css.sidebarBx}>\r\n                        <select onChange={changeSubtype} name=\"\" id=\"\">\r\n                            {props.subtypes.map(subtype => <option value={subtype.toLowerCase()}>{subtype}</option>)}\r\n                        </select>\r\n                    </div>\r\n                    <div className={css.pagination}>\r\n                        <div className=\"paginationButton\">\r\n                            {numberPortion > 1 && <button onClick={() => {setNumberPortion(numberPortion - 1)}}>Prev</button>}\r\n                        </div>\r\n                        {\r\n                            pages.filter(p => p>leftLimitPortion && p <= rightLimitPortion).map(page => {\r\n                                return <span className={page === props.currentPage && css.currentPage}>{page}</span>\r\n                            })\r\n                        }\r\n                        <div className=\"paginationButton\">\r\n                            {numberPortion < countPortion && <button onClick={() => {setNumberPortion(numberPortion + 1)}}>Next</button>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={css.boxCards}>\r\n                    {props.cards.map(card => {\r\n                        return <Card key={card.id}\r\n                                     name={card.name}\r\n                                     src_img={card.images.small}\r\n                                     subname={card.artist}\r\n                        />;\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default PokemonCards;","import {pokemonApi} from \"../api/api\";\r\n\r\nconst SET_CARDS = 'SET_CARDS';\r\nconst SET_SELECTED_TYPE = 'SET_SELECTED_TYPE';\r\nconst SET_SELECTED_SUBTYPE = 'SET_SELECTED_SUBTYPE';\r\nconst TOGGLE_LOADING = 'TOGGLE_LOADING';\r\nconst SET_TOTAL_CARDS_COUNT = 'SET_TOTAL_CARDS_COUNT';\r\n\r\n\r\nlet init_state = {\r\n    selectedType: 'colorless',\r\n    selectedSubtype: 'break',\r\n    page: 1,\r\n    pageSize: 4,\r\n    isLoading: false,\r\n    totalCount: null,\r\n    currentPage: 1,\r\n    cards: [],\r\n};\r\nconst pokemonCardsReducer = (state = init_state, action) => {\r\n    switch (action.type) {\r\n        case SET_CARDS:\r\n            return {\r\n                ...state, cards: [...action.cards],\r\n            };\r\n        case SET_SELECTED_TYPE:\r\n            return {\r\n                ...state, selectedType: action.selectedType,\r\n            };\r\n        case SET_SELECTED_SUBTYPE:\r\n            return {\r\n                ...state, selectedSubtype: action.selectedSubtype,\r\n            };\r\n        case TOGGLE_LOADING:\r\n            return {\r\n                ...state, isLoading: !state.isLoading,\r\n            };\r\n        case SET_TOTAL_CARDS_COUNT:\r\n            return {\r\n                ...state, totalCount: action.totalCount,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setCards = (cards) => {\r\n    return {type: SET_CARDS, cards}\r\n}\r\nexport const setSelectedType = (selectedType) => {\r\n    return {type: SET_SELECTED_TYPE, selectedType}\r\n}\r\nexport const setSelectedSubtype = (selectedSubtype) => {\r\n    return {type: SET_SELECTED_SUBTYPE, selectedSubtype}\r\n}\r\nexport const setToggleLoading = () => {\r\n    return {type: TOGGLE_LOADING}\r\n}\r\nexport const setTotalCardsCount = (totalCount) => {\r\n    return {type: SET_TOTAL_CARDS_COUNT, totalCount}\r\n}\r\n\r\n\r\nexport const getPokemonCards = (page, pageSize, query) => {\r\n    return async (dispatch) => {\r\n        dispatch(setToggleLoading());\r\n        let response = await pokemonApi.getPortionCards(page, pageSize, query);\r\n        console.log(response);\r\n        dispatch(setCards(response.data));\r\n        dispatch(setSelectedType(query.types));\r\n        dispatch(setSelectedSubtype(query.subtypes));\r\n        dispatch(setTotalCardsCount(response.totalCount));\r\n        dispatch(setToggleLoading());\r\n    }\r\n}\r\n\r\nexport default pokemonCardsReducer;","import React, {useState} from 'react';\r\nimport PokemonCards from \"./PokemonCards\";\r\nimport {connect} from \"react-redux\";\r\nimport {getPokemonCards} from \"../../redux/pokemon-cards-reducer\";\r\n\r\nclass PokemonCardsContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getPokemonCards(this.props.page, this.props.pageSize, {types: this.props.selectedType, subtypes: this.props.selectedSubtype});\r\n    }\r\n    getCardsByType(value){\r\n        this.props.getPokemonCards(this.props.page, this.props.pageSize, {types: value, subtypes: this.props.selectedSubtype});\r\n    }\r\n    getCardsBySubtype(value){\r\n        this.props.getPokemonCards(this.props.page, this.props.pageSize, {types: this.props.selectedType, subtypes: value});\r\n    }\r\n\r\n    render() {\r\n        return <PokemonCards {...this.props} getCardsByType={this.getCardsByType} getCardsBySubtype={this.getCardsBySubtype} />\r\n    }\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        page: state.pokemonCards.page,\r\n        pageSize: state.pokemonCards.pageSize,\r\n        totalCount: state.pokemonCards.totalCount,\r\n        currentPage: state.pokemonCards.currentPage,\r\n        cards: state.pokemonCards.cards,\r\n        selectedType: state.pokemonCards.selectedType,\r\n        selectedSubtype: state.pokemonCards.selectedSubtype,\r\n        isLoading: state.pokemonCards.isLoading,\r\n        types: state.initialData.pokemon_types,\r\n        subtypes: state.initialData.subtypes_pokemon,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, {getPokemonCards})(PokemonCardsContainer);","import './App.css';\nimport {Authorization, ConfirmPassword} from \"./components/Authorization/Authorization\";\nimport React from \"react\";\nimport {Route} from \"react-router-dom\";\nimport PokemonCardsContainer from \"./components/PokemonCards/PokemonCardsContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Route exact={true} path={'/'} render={() => <Authorization />} />\n        <Route exact={true} path={'/confirm'} render={() => <ConfirmPassword /> } />\n        <Route exact={true} path={'/cards'} render={() => <PokemonCardsContainer /> } />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {pokemonApi} from \"../api/api\";\r\n\r\nconst SET_TYPES = 'SET_TYPES';\r\nconst SET_SUBTYPES = 'SET_SUBTYPES';\r\n\r\n\r\nlet init_state = {\r\n    pokemon_types: [],\r\n    subtypes_pokemon: [],\r\n};\r\n\r\nexport const initialReducer = (state = init_state, action) => {\r\n    switch (action.type) {\r\n        case SET_TYPES:\r\n            console.log(action.pokemon_types);\r\n            return {\r\n                ...state, pokemon_types: [...action.pokemon_types]\r\n            }\r\n        case SET_SUBTYPES:\r\n            return {\r\n                ...state, subtypes_pokemon: [...action.subtypes_pokemon]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const setTypes = (pokemon_types) => {\r\n    return {type: SET_TYPES, pokemon_types}\r\n}\r\nexport const setSubtypes = (subtypes_pokemon) => {\r\n    return {type: SET_SUBTYPES, subtypes_pokemon}\r\n}\r\n\r\nexport const getTypesPokemon = () => {\r\n    return async (dispatch) => {\r\n        let response = await pokemonApi.getTypesPokemon();\r\n        dispatch(setTypes(response.data));\r\n    }\r\n}\r\nexport const getSubtypesPokemon = () => {\r\n    return async (dispatch) => {\r\n        let response = await pokemonApi.getSubtypesPokemon();\r\n        dispatch(setSubtypes(response.data));\r\n    }\r\n}\r\n","import pokemonCardsReducer from \"./pokemon-cards-reducer\";\r\nimport {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport middleThunk from 'redux-thunk';\r\nimport {initialReducer} from \"./initial-reducer\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nlet reducers = combineReducers({\r\n    pokemonCards : pokemonCardsReducer,\r\n    initialData: initialReducer,\r\n});\r\n\r\nexport const store = createStore(reducers, composeEnhancers(applyMiddleware(middleThunk)));\r\n\r\nwindow.store = store;","import './App.css';\nimport React from \"react\";\nimport App from \"./App\";\nimport {connect} from \"react-redux\";\nimport {getSubtypesPokemon, getTypesPokemon} from \"./redux/initial-reducer\";\n\nclass InitializationAppContainer extends React.Component {\n    componentDidMount() {\n        this.props.getTypesPokemon();\n        this.props.getSubtypesPokemon();\n    }\n\n    render() {\n        return <App />\n    }\n}\nexport default connect(null, {getTypesPokemon, getSubtypesPokemon})(InitializationAppContainer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport  {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\nimport InitializationAppContainer from \"./InitializationAppContainer\";\n\nReactDOM.render(\n  // <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter basename={'/belkin'}>\n        <InitializationAppContainer />\n      </HashRouter>\n    </Provider>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}