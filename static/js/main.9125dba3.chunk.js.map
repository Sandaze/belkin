{"version":3,"sources":["components/ViewCard/ViewCard.module.css","common/Pagination/Pagination.module.css","components/Authorization/Authorization.module.css","components/Navbar/Navbar.module.css","common/Preloader/Preloader.module.css","components/PokemonCards/PokemonCards.module.css","api/api.js","components/Authorization/Authorization.jsx","components/Navbar/Navbar.jsx","components/PokemonCards/Card/Card.jsx","common/Preloader/Preloader.jsx","common/Pagination/Pagination.jsx","components/PokemonCards/PokemonCards.jsx","redux/pokemon-cards-reducer.js","components/PokemonCards/PokemonCardsContainer.jsx","components/ViewCard/ViewCard.jsx","App.js","reportWebVitals.js","redux/initial-reducer.js","redux/store.js","InitializationAppContainer.js","index.js"],"names":["module","exports","instance","axios","create","headers","baseURL","authApi","password","symbols","i","charAt","Math","floor","random","length","pokemonApi","page","pageSize","query","get","types","subtypes","then","res","data","ConfirmPassword","props","useState","oneTimePassword","code","setCode","isValidData","setIsValidData","confirmIsClicked","setConfirmIsClicked","console","log","to","className","css","auth","confirm","authBox","inputBx","onChange","e","currentTarget","value","type","placeholder","errorBx","active","errorBxIcon","errorBxMessage","buttonBx","onClick","Authorization","login","setLogin","pass","setPass","loginIsClicked","setLoginIsClicked","loginHandler","passwordHandler","Navbar","navbar","navbarM","children","Card","urlCard","boxItem","src","src_img","alt","boxItemImg","boxItemName","name","boxItemSubName","subname","Preloader","preloader","Pagination","pagesCount","ceil","totalCount","pages","push","countPortion","numberPortion","setNumberPortion","rightLimitPortion","leftLimitPortion","pagination","paginationButton","prev","filter","p","map","changePage","currentPage","next","PokemonCards","history","useHistory","isLoading","wrapper","sidebar","sidebarBx","getCardsByType","id","toLowerCase","getCardsBySubtype","subtype","boxCards","cards","card","images","small","artist","SET_CARDS","SET_SELECTED_TYPE","SET_SELECTED_SUBTYPE","TOGGLE_LOADING","SET_TOTAL_CARDS_COUNT","SET_CURRENT_PAGE","init_state","selectedType","selectedSubtype","setToggleLoading","pokemonCardsReducer","state","action","PokemonCardsContainer","getPokemonCards","setCurrentPage","this","React","Component","connect","pokemonCards","initialData","pokemon_types","subtypes_pokemon","dispatch","a","response","ViewCard","useParams","useSelector","el","cardBox","large","cardBoxImg","cardBoxDesc","rules","cardBoxName","cardBoxTypes","cardBoxSubtypes","attacks","damage","convertedEnergyCost","hp","App","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SET_TYPES","SET_SUBTYPES","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","store","createStore","applyMiddleware","middleThunk","InitializationAppContainer","getTypesPokemon","getSubtypesPokemon","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.9125dba3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"ViewCard_card__35kvx\",\"cardBoxImg\":\"ViewCard_cardBoxImg__2pxyW\",\"cardBox\":\"ViewCard_cardBox__3PI9Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__T2Hx-\",\"currentPage\":\"Pagination_currentPage__1czMh\",\"paginationButton\":\"Pagination_paginationButton__2sMx2\",\"prev\":\"Pagination_prev__2Mc8J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"Authorization_auth__39Hdj\",\"inputBx\":\"Authorization_inputBx__2Am5h\",\"buttonBx\":\"Authorization_buttonBx__AjwhD\",\"errorBxIcon\":\"Authorization_errorBxIcon__36fvI\",\"errorBx\":\"Authorization_errorBx__3plge\",\"active\":\"Authorization_active__3wZ8u\",\"errorBxMessage\":\"Authorization_errorBxMessage__1rSEo\",\"confirm\":\"Authorization_confirm__1Ou5D\",\"fadeIn\":\"Authorization_fadeIn__1iPFL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__18ZBo\",\"navbarM\":\"Navbar_navbarM__2bhQA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__2H2cz\",\"fadeIn\":\"Preloader_fadeIn__2L1Zh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PokemonCards_wrapper__1jyBz\",\"sidebar\":\"PokemonCards_sidebar__2q8MJ\",\"sidebarBx\":\"PokemonCards_sidebarBx__3wOa9\",\"boxCards\":\"PokemonCards_boxCards__WFmhB\",\"boxItem\":\"PokemonCards_boxItem__1Wb-F\",\"boxItemImg\":\"PokemonCards_boxItemImg__2iZBm\",\"boxItemName\":\"PokemonCards_boxItemName__3LXzj\",\"boxItemSubName\":\"PokemonCards_boxItemSubName__1i54D\"};","import axios from \"axios\";\r\n\r\nconst baseURL = 'https://api.pokemontcg.io/v2/'\r\nconst instance = axios.create({\r\n    headers: {\r\n        'X-Api-Key': 'd800239c-ade8-4890-85a0-04e021a8e2b1',\r\n    },\r\n    baseURL: baseURL,\r\n});\r\n\r\nexport const authApi = {\r\n    getOneTimePassword: () => {\r\n        let password = \"\";\r\n        let symbols = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n        for (let i = 0; i < 15; i++)\r\n            password += symbols.charAt(Math.floor(Math.random() * symbols.length));\r\n\r\n        return password;\r\n    },\r\n}\r\nexport const pokemonApi = {\r\n    getPortionCards: (page, pageSize, query) => {\r\n        return instance.get(`cards?q=types:${query.types} subtypes:\"${query.subtypes}\"&page=${page}&pageSize=${pageSize}`).then(res => res.data);\r\n    },\r\n    getTypesPokemon: () => {\r\n        return instance.get('types').then(res => res.data);\r\n    },\r\n    getSubtypesPokemon: () => {\r\n        return instance.get('subtypes').then(res => res.data);\r\n    }\r\n}","import css from './Authorization.module.css';\r\nimport React, {useState, useEffect} from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {authApi} from \"../../api/api\";\r\n\r\nexport const ConfirmPassword = (props) => {\r\n    const [oneTimePassword, setOneTimePassword] = useState(authApi.getOneTimePassword());\r\n    const [code, setCode] = useState('');\r\n    const [isValidData, setIsValidData] = useState(false);\r\n    const [confirmIsClicked, setConfirmIsClicked] = useState(false);\r\n\r\n    console.log('OTP:' + ' ' + oneTimePassword);\r\n\r\n    const checkOTP = () => {\r\n        setConfirmIsClicked(true);\r\n        if(code === oneTimePassword){\r\n            setIsValidData(true);\r\n        }\r\n    }\r\n\r\n    if(isValidData) return <Redirect to={'/cards'} />\r\n\r\n    return (\r\n        <div className={css.auth + ' ' + css.confirm}>\r\n            <h1>Подтверждение</h1>\r\n            <div className={css.authBox}>\r\n                <div className={css.inputBx}>\r\n                    <input onChange={(e) => setCode(e.currentTarget.value)} type=\"text\" value={code}\r\n                           placeholder={'Code from SMS'}/>\r\n                    {confirmIsClicked && <div className={`${css.errorBx} ${!isValidData ? css.active : ''}`}>\r\n                        <div className={css.errorBxIcon}>!</div>\r\n                        <div className={css.errorBxMessage}>Неправильно введен SMS</div>\r\n                    </div>}\r\n                </div>\r\n                <div className={css.buttonBx}>\r\n                    <button onClick={checkOTP}>Confirm</button>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport const Authorization = (props) => {\r\n    const [login, setLogin] = useState('');\r\n    const [pass, setPass] = useState('');\r\n    const [isValidData, setIsValidData] = useState(false);\r\n    const [loginIsClicked, setLoginIsClicked] = useState(false);\r\n\r\n    let data = {\r\n        'login': '1',\r\n        'password': '1',\r\n    }\r\n\r\n    const checkValidate = (e) => {\r\n        setLoginIsClicked(true);\r\n        if (login !== data.login || pass !== data.password) {\r\n            setIsValidData(false);\r\n            console.log(1);\r\n        } else {\r\n            setIsValidData(true);\r\n        }\r\n    }\r\n\r\n    const loginHandler = (e) => {\r\n        setLogin(e.currentTarget.value);\r\n    }\r\n    const passwordHandler = (e) => {\r\n        setPass(e.currentTarget.value);\r\n    }\r\n    if (isValidData) return <Redirect to={'/confirm'}/>\r\n    return (\r\n        <div className={css.auth}>\r\n            <h1>Авторизация</h1>\r\n            <div className={css.authBox}>\r\n                <div className={css.inputBx}>\r\n                    <input onChange={e => loginHandler(e)} value={login} type=\"text\" placeholder={'Login'}/>\r\n                    {loginIsClicked && <div className={`${css.errorBx} ${!isValidData ? css.active : ''}`}>\r\n                        <div className={css.errorBxIcon}>!</div>\r\n                        <div className={css.errorBxMessage}>Неправильно набран логин или пароль</div>\r\n                    </div>}\r\n                </div>\r\n                <div className={css.inputBx}>\r\n                    <input value={pass} onChange={e => passwordHandler(e)} type=\"password\" placeholder={'Password'}/>\r\n                    {loginIsClicked && <div className={`${css.errorBx} ${!isValidData ? css.active : ''}`}>\r\n                        <div className={css.errorBxIcon}>!</div>\r\n                        <div className={css.errorBxMessage}>Неправильно набран логин или пароль</div>\r\n                    </div>}\r\n                </div>\r\n                <div className={css.buttonBx}>\r\n                    <button onClick={checkValidate}>Login</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import css from './Navbar.module.css';\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <div className={`${css.navbar} ${css.navbarM}`}>\r\n            {props.children}\r\n            <button>Logout</button>\r\n        </div>\r\n    );\r\n}\r\nexport default Navbar;","import css from \"../PokemonCards.module.css\";\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div onClick={props.urlCard} className={css.boxItem}><img src={props.src_img} alt=\"\" className={css.boxItemImg}/>\r\n            <h1 className={css.boxItemName}>{props.name}</h1>\r\n            <p className={css.boxItemSubName}>{props.subname}</p>\r\n        </div>\r\n    );\r\n}\r\nexport default Card;","import css from './Preloader.module.css';\r\nconst Preloader = (props) => {\r\n    return <div className={css.preloader}>\r\n        <img src=\"\" alt=\"\"/>\r\n    </div>\r\n}\r\nexport default Preloader;","import css from \"./Pagination.module.css\";\r\nimport React, {useState} from \"react\";\r\n\r\nconst Pagination = (props) => {\r\n    let pagesCount = Math.ceil(props.totalCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++){\r\n        pages.push(i);\r\n    }\r\n    let countPortion = Math.ceil(pagesCount / props.pageSize);\r\n\r\n    let [numberPortion, setNumberPortion] = useState(1);\r\n\r\n    let rightLimitPortion = numberPortion * props.pageSize;\r\n    let leftLimitPortion = numberPortion * props.pageSize - props.pageSize;\r\n    return <div className={css.pagination}>\r\n        <div className={css.paginationButton}>\r\n            {numberPortion > 1 && <button onClick={() => {setNumberPortion(numberPortion - 1)}} className={css.prev}>Prev</button>}\r\n        </div>\r\n        {\r\n            pages.filter(p => p>leftLimitPortion && p <= rightLimitPortion).map(page => {\r\n                return <span onClick={() => props.changePage(page)} className={page === props.currentPage && css.currentPage}>{page}</span>\r\n            })\r\n        }\r\n        <div className={css.paginationButton}>\r\n            {numberPortion < countPortion && <button onClick={() => {setNumberPortion(numberPortion + 1)}} className={css.next}>Next</button>}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Pagination;","import Navbar from \"../Navbar/Navbar\";\r\nimport css from './PokemonCards.module.css';\r\nimport Card from \"./Card/Card\";\r\nimport React, {useState} from 'react';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport Pagination from \"../../common/Pagination/Pagination\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst PokemonCards = (props) => {\r\n    let history = useHistory();\r\n    const changeType = (e) => {\r\n        props.getCardsByType(e.currentTarget.value);\r\n    }\r\n    const changeSubtype = (e) => {\r\n        props.getCardsBySubtype(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {props.isLoading && <Preloader />}\r\n            <Navbar />\r\n            <div className={css.wrapper}>\r\n                <div className={css.sidebar}>\r\n                    <div className={css.sidebarBx}>\r\n                        <select onChange={changeType} name=\"\" id=\"\">\r\n                            {props.types.map(type => <option value={type.toLowerCase()}>{type}</option>)}\r\n                        </select>\r\n                    </div>\r\n                    <div className={css.sidebarBx}>\r\n                        <select onChange={changeSubtype} name=\"\" id=\"\">\r\n                            {props.subtypes.map(subtype => <option value={subtype.toLowerCase()}>{subtype}</option>)}\r\n                        </select>\r\n                    </div>\r\n                    <Pagination totalCount={props.totalCount} pageSize={props.pageSize} changePage={props.changePage} currentPage={props.currentPage} />\r\n                </div>\r\n                <div>\r\n                    <div className={css.boxCards}>\r\n                        {props.cards.map(card => {\r\n                            return <Card key={card.id}\r\n                                         name={card.name}\r\n                                         src_img={card.images.small}\r\n                                         subname={card.artist}\r\n                                         urlCard={() => history.push(`/card/${card.id}`)}\r\n                            />;\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default PokemonCards;","import {pokemonApi} from \"../api/api\";\r\n\r\nconst SET_CARDS = 'SET_CARDS';\r\nconst SET_SELECTED_TYPE = 'SET_SELECTED_TYPE';\r\nconst SET_SELECTED_SUBTYPE = 'SET_SELECTED_SUBTYPE';\r\nconst TOGGLE_LOADING = 'TOGGLE_LOADING';\r\nconst SET_TOTAL_CARDS_COUNT = 'SET_TOTAL_CARDS_COUNT';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\n\r\n\r\nlet init_state = {\r\n    selectedType: 'colorless',\r\n    selectedSubtype: 'break',\r\n    page: 1,\r\n    pageSize: 6,\r\n    isLoading: false,\r\n    totalCount: null,\r\n    currentPage: 1,\r\n    cards: [],\r\n};\r\nconst pokemonCardsReducer = (state = init_state, action) => {\r\n    switch (action.type) {\r\n        case SET_CARDS:\r\n            return {\r\n                ...state, cards: [...action.cards],\r\n            };\r\n        case SET_SELECTED_TYPE:\r\n            return {\r\n                ...state, selectedType: action.selectedType,\r\n            };\r\n        case SET_SELECTED_SUBTYPE:\r\n            return {\r\n                ...state, selectedSubtype: action.selectedSubtype,\r\n            };\r\n        case TOGGLE_LOADING:\r\n            return {\r\n                ...state, isLoading: !state.isLoading,\r\n            };\r\n        case SET_TOTAL_CARDS_COUNT:\r\n            return {\r\n                ...state, totalCount: action.totalCount,\r\n            };\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.currentPage,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setCards = (cards) => {\r\n    return {type: SET_CARDS, cards}\r\n}\r\nexport const setSelectedType = (selectedType) => {\r\n    return {type: SET_SELECTED_TYPE, selectedType}\r\n}\r\nexport const setSelectedSubtype = (selectedSubtype) => {\r\n    return {type: SET_SELECTED_SUBTYPE, selectedSubtype}\r\n}\r\nexport const setToggleLoading = () => {\r\n    return {type: TOGGLE_LOADING}\r\n}\r\nexport const setTotalCardsCount = (totalCount) => {\r\n    return {type: SET_TOTAL_CARDS_COUNT, totalCount}\r\n}\r\nexport const setCurrentPage = (currentPage) => {\r\n    return {type: SET_CURRENT_PAGE, currentPage}\r\n}\r\n\r\n\r\nexport const getPokemonCards = (page, pageSize, query) => {\r\n    return async (dispatch) => {\r\n        dispatch(setToggleLoading());\r\n        let response = await pokemonApi.getPortionCards(page, pageSize, query);\r\n        console.log(response);\r\n        dispatch(setCards(response.data));\r\n        dispatch(setSelectedType(query.types));\r\n        dispatch(setSelectedSubtype(query.subtypes));\r\n        dispatch(setTotalCardsCount(response.totalCount));\r\n        dispatch(setToggleLoading());\r\n    }\r\n}\r\n\r\nexport default pokemonCardsReducer;","import React, {useState} from 'react';\r\nimport PokemonCards from \"./PokemonCards\";\r\nimport {connect} from \"react-redux\";\r\nimport {getPokemonCards, setCurrentPage} from \"../../redux/pokemon-cards-reducer\";\r\n\r\nclass PokemonCardsContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getPokemonCards(this.props.page, this.props.pageSize, {types: this.props.selectedType, subtypes: this.props.selectedSubtype});\r\n    }\r\n    getCardsByType = (value) => {\r\n        this.props.getPokemonCards(this.props.page, this.props.pageSize, {types: value, subtypes: this.props.selectedSubtype});\r\n    }\r\n    getCardsBySubtype = (value) => {\r\n        this.props.getPokemonCards(this.props.page, this.props.pageSize, {types: this.props.selectedType, subtypes: value});\r\n    }\r\n\r\n    changePage = (page) => {\r\n        this.props.setCurrentPage(page);\r\n        this.props.getPokemonCards(page, this.props.pageSize, {types: this.props.selectedType, subtypes: this.props.selectedSubtype});\r\n    }\r\n\r\n    render() {\r\n        return <PokemonCards {...this.props} getCardsByType={this.getCardsByType} getCardsBySubtype={this.getCardsBySubtype} changePage={this.changePage} />\r\n    }\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        page: state.pokemonCards.page,\r\n        pageSize: state.pokemonCards.pageSize,\r\n        totalCount: state.pokemonCards.totalCount,\r\n        currentPage: state.pokemonCards.currentPage,\r\n        cards: state.pokemonCards.cards,\r\n        selectedType: state.pokemonCards.selectedType,\r\n        selectedSubtype: state.pokemonCards.selectedSubtype,\r\n        isLoading: state.pokemonCards.isLoading,\r\n        types: state.initialData.pokemon_types,\r\n        subtypes: state.initialData.subtypes_pokemon,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, {getPokemonCards, setCurrentPage})(PokemonCardsContainer);","import {useHistory, useParams} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport css from './ViewCard.module.css';\r\nimport React from \"react\";\r\n\r\nconst ViewCard = (props) => {\r\n    const {id} = useParams();\r\n    const card = useSelector((state) => state.pokemonCards.cards.filter(el => el.id === id))[0];\r\n    let history = useHistory();\r\n    return <>\r\n        <Navbar>\r\n            <button onClick={() => {history.push('/cards')}}>Back</button>\r\n        </Navbar>\r\n        <div className={css.card}>\r\n            <div className={css.cardBox}>\r\n                <img src={card.images.large} alt=\"\" className={css.cardBoxImg}/>\r\n                <p className={css.cardBoxDesc}>{card.rules[0]}</p>\r\n            </div>\r\n            <div className={css.cardBox}>\r\n                <p className={css.cardBoxName}>{card.name}</p>\r\n                <p className={css.cardBoxTypes}><span>type:</span>{card.types.map(el => el)}</p>\r\n                <p className={css.cardBoxSubtypes}><span>subtype:</span>{card.subtypes.map(el => el)}</p>\r\n                <hr/>\r\n                <p><span>damage:</span>{card.attacks[0].damage}</p>\r\n                <p><span>cost:</span>{card.attacks[0].convertedEnergyCost}</p>\r\n                <p><span>hp:</span>{card.hp}</p>\r\n            </div>\r\n        </div>\r\n    </>;\r\n}\r\n\r\nexport default ViewCard;","import './App.css';\nimport {Authorization, ConfirmPassword} from \"./components/Authorization/Authorization\";\nimport React from \"react\";\nimport {Route} from \"react-router-dom\";\nimport PokemonCardsContainer from \"./components/PokemonCards/PokemonCardsContainer\";\nimport ViewCard from \"./components/ViewCard/ViewCard\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Route exact={true} path={'/'} render={() => <Authorization />} />\n        <Route exact={true} path={'/confirm'} render={() => <ConfirmPassword /> } />\n        <Route exact={true} path={'/cards'} render={() => <PokemonCardsContainer /> } />\n        <Route exact={true} path={'/card/:id'} render={() => <ViewCard /> } />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {pokemonApi} from \"../api/api\";\r\n\r\nconst SET_TYPES = 'SET_TYPES';\r\nconst SET_SUBTYPES = 'SET_SUBTYPES';\r\n\r\n\r\nlet init_state = {\r\n    pokemon_types: [],\r\n    subtypes_pokemon: [],\r\n};\r\n\r\nexport const initialReducer = (state = init_state, action) => {\r\n    switch (action.type) {\r\n        case SET_TYPES:\r\n            console.log(action.pokemon_types);\r\n            return {\r\n                ...state, pokemon_types: [...action.pokemon_types]\r\n            }\r\n        case SET_SUBTYPES:\r\n            return {\r\n                ...state, subtypes_pokemon: [...action.subtypes_pokemon]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const setTypes = (pokemon_types) => {\r\n    return {type: SET_TYPES, pokemon_types}\r\n}\r\nexport const setSubtypes = (subtypes_pokemon) => {\r\n    return {type: SET_SUBTYPES, subtypes_pokemon}\r\n}\r\n\r\nexport const getTypesPokemon = () => {\r\n    return async (dispatch) => {\r\n        let response = await pokemonApi.getTypesPokemon();\r\n        dispatch(setTypes(response.data));\r\n    }\r\n}\r\nexport const getSubtypesPokemon = () => {\r\n    return async (dispatch) => {\r\n        let response = await pokemonApi.getSubtypesPokemon();\r\n        dispatch(setSubtypes(response.data));\r\n    }\r\n}\r\n","import pokemonCardsReducer from \"./pokemon-cards-reducer\";\r\nimport {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport middleThunk from 'redux-thunk';\r\nimport {initialReducer} from \"./initial-reducer\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nlet reducers = combineReducers({\r\n    pokemonCards : pokemonCardsReducer,\r\n    initialData: initialReducer,\r\n});\r\n\r\nexport const store = createStore(reducers, composeEnhancers(applyMiddleware(middleThunk)));\r\n\r\nwindow.store = store;","import './App.css';\nimport React from \"react\";\nimport App from \"./App\";\nimport {connect} from \"react-redux\";\nimport {getSubtypesPokemon, getTypesPokemon} from \"./redux/initial-reducer\";\n\nclass InitializationAppContainer extends React.Component {\n    componentDidMount() {\n        this.props.getTypesPokemon();\n        this.props.getSubtypesPokemon();\n    }\n\n    render() {\n        return <App />\n    }\n}\nexport default connect(null, {getTypesPokemon, getSubtypesPokemon})(InitializationAppContainer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport  {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\nimport InitializationAppContainer from \"./InitializationAppContainer\";\n\nReactDOM.render(\n  // <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter basename={'/belkin'}>\n        <InitializationAppContainer />\n      </HashRouter>\n    </Provider>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}